name: Build and Deploy Spring Boot Microservices

on:
  push:
    branches:
      - main  # 或你希望触发的分支名
  pull_request:
    branches:
      - main

jobs:
  build-deploy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: ['user-service', 'content-service', 'comment-service', 'novel-service', 'gateway-service']
  
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Build Service - ${{ matrix.service }}
        run: |
          cd final-chapters-backend/${{ matrix.service }}
          mvn clean package

      - name: Upload Artifact (Optional)
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.service }}-jar
          path: final-chapters-backend/${{ matrix.service }}/target/*.jar

      - name: Deploy to server
        uses: appleboy/scp-action@v0.1.5  # 指定具体版本
        with:
          host: ${{ secrets['HOST_' + formatEnvName(matrix.service)] }}
          username: ${{ secrets['USERNAME_' + formatEnvName(matrix.service)] }}
          port: ${{ secrets['PORT_' + formatEnvName(matrix.service)] }}
          key: ${{ secrets['KEY_' + formatEnvName(matrix.service)] }}
          source: "final-chapters-backend/${{ matrix.service }}/target/*.jar"
          target: "/path/to/deploy/${{ matrix.service }}"

# 添加格式化服务名为环境变量的函数
jobs.build-deploy.strategy.fail-fast: false
jobs.build-deploy.steps:
  - name: Setup bash functions
    run: |
      echo 'function formatEnvName() { echo "${1^^}" | tr "-" "_"; }' >> $BASH_ENV
